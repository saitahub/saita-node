[workspace.package]
authors = ["SaitChain <Saitama>"]
edition = "2021"
repository = "https://github.com/saitamahub/SaitaChain-Layer1"
license = "GPL-3.0-only"

[workspace]
resolver = "2"

members = [
	"saitachain",
	"saitachain/cli",
	"saitachain/core-primitives",
	"saitachain/erasure-coding",
	"saitachain/erasure-coding/fuzzer",
	"saitachain/node/collation-generation",
	"saitachain/node/core/approval-voting",
	"saitachain/node/core/av-store",
	"saitachain/node/core/backing",
	"saitachain/node/core/bitfield-signing",
	"saitachain/node/core/candidate-validation",
	"saitachain/node/core/chain-api",
	"saitachain/node/core/chain-selection",
	"saitachain/node/core/dispute-coordinator",
	"saitachain/node/core/parachains-inherent",
	"saitachain/node/core/prospective-parachains",
	"saitachain/node/core/provisioner",
	"saitachain/node/core/pvf",
	"saitachain/node/core/pvf/common",
	"saitachain/node/core/pvf/execute-worker",
	"saitachain/node/core/pvf/prepare-worker",
	"saitachain/node/core/pvf-checker",
	"saitachain/node/core/runtime-api",
	"saitachain/node/gum",
	"saitachain/node/gum/proc-macro",
	"saitachain/node/jaeger",
	"saitachain/node/malus",
	"saitachain/node/metrics",
	"saitachain/node/network/approval-distribution",
	"saitachain/node/network/availability-distribution",
	"saitachain/node/network/availability-recovery",
	"saitachain/node/network/bitfield-distribution",
	"saitachain/node/network/bridge",
	"saitachain/node/network/collator-protocol",
	"saitachain/node/network/dispute-distribution",
	"saitachain/node/network/gossip-support",
	"saitachain/node/network/protocol",
	"saitachain/node/network/statement-distribution",
	"saitachain/node/overseer",
	"saitachain/node/primitives",
	"saitachain/node/service",
	"saitachain/node/subsystem",
	"saitachain/node/subsystem-test-helpers",
	"saitachain/node/subsystem-types",
	"saitachain/node/subsystem-util",
	"saitachain/node/test/client",
	"saitachain/node/test/performance-test",
	"saitachain/node/test/service",
	"saitachain/node/zombienet-backchannel",
	"saitachain/parachain",
	"saitachain/parachain/test-parachains",
	"saitachain/parachain/test-parachains/adder",
	"saitachain/parachain/test-parachains/adder/collator",
	"saitachain/parachain/test-parachains/halt",
	"saitachain/parachain/test-parachains/undying",
	"saitachain/parachain/test-parachains/undying/collator",
	"saitachain/primitives",
	"saitachain/primitives/test-helpers",
	"saitachain/rpc",
	"saitachain/runtime/common",
	"saitachain/runtime/common/slot_range_helper",
	"saitachain/runtime/metrics",
	"saitachain/runtime/parachains",
	"saitachain/runtime/saitachain",
	"saitachain/runtime/saitachain/constants",
	"saitachain/runtime/test-runtime",
	"saitachain/runtime/test-runtime/constants",
	"saitachain/statement-table",
	"saitachain/utils/generate-bags",
	"saitachain/utils/remote-ext-tests/bags-list",
	"saitachain/utils/staking-miner",
	"saitachain/xcm",
	"saitachain/xcm/pallet-xcm",
	"saitachain/xcm/pallet-xcm-benchmarks",
	"saitachain/xcm/procedural",
	"saitachain/xcm/xcm-builder",
	"saitachain/xcm/xcm-executor",
	"saitachain/xcm/xcm-executor/integration-tests",
	"saitachain/xcm/xcm-simulator",
	"saitachain/xcm/xcm-simulator/example",
	"saitachain/xcm/xcm-simulator/fuzzer",

	# EVM 
	"saitachain/evm-client/api",
    "saitachain/evm-client/cli",
	"saitachain/evm-client/consensus",
	"saitachain/evm-client/db",
	"saitachain/evm-client/mapping-sync",
	"saitachain/evm-client/rpc",
	"saitachain/evm-client/rpc-core",
	"saitachain/evm-client/storage",

	"saitachain/evm-frame/base-fee",
	"saitachain/evm-frame/dynamic-fee",
	"saitachain/evm-frame/ethereum",
	"saitachain/evm-frame/evm",
	"saitachain/evm-frame/evm-chain-id",
	"saitachain/evm-frame/evm/test-vector-support",
	"saitachain/evm-frame/evm/precompile/blake2",
	"saitachain/evm-frame/evm/precompile/bls12377",
	"saitachain/evm-frame/evm/precompile/bn128",
	"saitachain/evm-frame/evm/precompile/bw6761",
	"saitachain/evm-frame/evm/precompile/curve25519",
	"saitachain/evm-frame/evm/precompile/dispatch",
	"saitachain/evm-frame/evm/precompile/ed25519",
	"saitachain/evm-frame/evm/precompile/modexp",
	"saitachain/evm-frame/evm/precompile/sha3fips",
	"saitachain/evm-frame/evm/precompile/simple",
	"saitachain/evm-frame/hotfix-sufficients",

	"saitachain/evm-primitives/consensus",
	"saitachain/evm-primitives/dynamic-fee",
	"saitachain/evm-primitives/ethereum",
	"saitachain/evm-primitives/evm",
	"saitachain/evm-primitives/rpc",
	"saitachain/evm-primitives/self-contained",
	"saitachain/evm-primitives/storage",
	"saitachain/evm-primitives/account",



	# "substrate/bin/node/bench",
	# "substrate/bin/node/cli",
	# "substrate/bin/node/executor",
	# "substrate/bin/node/inspect",
	# "substrate/bin/node/primitives",
	# "substrate/bin/node/rpc",
	# "substrate/bin/node/runtime",
	# "substrate/bin/node/testing",
	# "substrate/bin/node-template/node",
	# "substrate/bin/node-template/pallets/template",
	# "substrate/bin/node-template/runtime",
	# "substrate/bin/utils/chain-spec-builder",
	# "substrate/bin/utils/subkey",
	# "substrate/client/allocator",
	# "substrate/client/api",
	# "substrate/client/authority-discovery",
	# "substrate/client/basic-authorship",
	# "substrate/client/block-builder",
	# "substrate/client/chain-spec",
	# "substrate/client/chain-spec/derive",
	# "substrate/client/cli",
	# "substrate/client/consensus/aura",
	# "substrate/client/consensus/babe",
	# "substrate/client/consensus/babe/rpc",
	# "substrate/client/consensus/beefy",
	# "substrate/client/consensus/beefy/rpc",
	# "substrate/client/consensus/common",
	# "substrate/client/consensus/epochs",
	# "substrate/client/consensus/grandpa",
	# "substrate/client/consensus/grandpa/rpc",
	# "substrate/client/consensus/manual-seal",
	# "substrate/client/consensus/pow",
	# "substrate/client/consensus/slots",
	# "substrate/client/db",
	# "substrate/client/executor",
	# "substrate/client/executor/common",
	# "substrate/client/executor/runtime-test",
	# "substrate/client/executor/wasmtime",
	# "substrate/client/informant",
	# "substrate/client/keystore",
	# "substrate/client/merkle-mountain-range",
	# "substrate/client/merkle-mountain-range/rpc",
	# "substrate/client/network",
	# "substrate/client/network/bitswap",
	# "substrate/client/network/common",
	# "substrate/client/network/light",
	# "substrate/client/network/statement",
	# "substrate/client/network/sync",
	# "substrate/client/network/test",
	# "substrate/client/network/transactions",
	# "substrate/client/network-gossip",
	# "substrate/client/offchain",
	# "substrate/client/proposer-metrics",
	# "substrate/frame/burn",
	# "substrate/client/rpc",
	# "substrate/client/rpc-api",
	# "substrate/client/rpc-servers",
	# "substrate/client/rpc-spec-v2",
	# "substrate/client/service",
	# "substrate/client/service/test",
	# "substrate/client/state-db",
	# "substrate/client/statement-store",
	# "substrate/client/storage-monitor",
	# "substrate/client/sync-state-rpc",
	# "substrate/client/sysinfo",
	# "substrate/client/telemetry",
	# "substrate/client/tracing",
	# "substrate/client/tracing/proc-macro",
	# "substrate/client/transaction-pool",
	# "substrate/client/transaction-pool/api",
	# "substrate/client/utils",
	# "substrate/frame/alliance",
	# "substrate/frame/asset-conversion",
	# "substrate/frame/asset-rate",
	# "substrate/frame/assets",
	# "substrate/frame/atomic-swap",
	# "substrate/frame/aura",
	# "substrate/frame/authority-discovery",
	# "substrate/frame/authorship",
	# "substrate/frame/babe",
	# "substrate/frame/bags-list",
	# "substrate/frame/bags-list/fuzzer",
	# "substrate/frame/bags-list/remote-tests",
	# "substrate/frame/balances",
	# "substrate/frame/beefy",
	# "substrate/frame/beefy-mmr",
	# "substrate/frame/benchmarking",
	# "substrate/frame/benchmarking/pov",
	# "substrate/frame/bounties",
	# "substrate/frame/broker",
	# "substrate/frame/child-bounties",
	# "substrate/frame/collective",
	# "substrate/frame/contracts",
	# "substrate/frame/contracts/primitives",
	# "substrate/frame/contracts/proc-macro",
	# "substrate/frame/conviction-voting",
	# "substrate/frame/core-fellowship",
	# "substrate/frame/democracy",
	# "substrate/frame/election-provider-multi-phase",
	# "substrate/frame/election-provider-multi-phase/test-staking-e2e",
	# "substrate/frame/election-provider-support",
	# "substrate/frame/election-provider-support/benchmarking",
	# "substrate/frame/election-provider-support/solution-type",
	# "substrate/frame/election-provider-support/solution-type/fuzzer",
	# "substrate/frame/elections-phragmen",
	# "substrate/frame/examples",
	# "substrate/frame/examples/basic",
	# "substrate/frame/examples/default-config",
	# "substrate/frame/examples/dev-mode",
	# "substrate/frame/examples/kitchensink",
	# "substrate/frame/examples/offchain-worker",
	# "substrate/frame/examples/split",
	# "substrate/frame/executive",
	# "substrate/frame/fast-unstake",
	# "substrate/frame/glutton",
	# "substrate/frame/grandpa",
	# "substrate/frame/identity",
	# "substrate/frame/im-online",
	# "substrate/frame/indices",
	# "substrate/frame/insecure-randomness-collective-flip",
	# "substrate/frame/lottery",
	# "substrate/frame/membership",
	# "substrate/frame/merkle-mountain-range",
	# "substrate/frame/message-queue",
	# "substrate/frame/multisig",
	# "substrate/frame/nft-fractionalization",
	# "substrate/frame/nfts",
	# "substrate/frame/nfts/runtime-api",
	# "substrate/frame/nicks",
	# "substrate/frame/nis",
	# "substrate/frame/node-authorization",
	# "substrate/frame/nomination-pools",
	# "substrate/frame/nomination-pools/benchmarking",
	# "substrate/frame/nomination-pools/fuzzer",
	# "substrate/frame/nomination-pools/runtime-api",
	# "substrate/frame/nomination-pools/test-staking",
	# "substrate/frame/offences",
	# "substrate/frame/offences/benchmarking",
	# "substrate/frame/paged-list",
	# "substrate/frame/paged-list/fuzzer",
	# "substrate/frame/preimage",
	# "substrate/frame/proxy",
	# "substrate/frame/ranked-collective",
	# "substrate/frame/recovery",
	# "substrate/frame/referenda",
	# "substrate/frame/remark",
	# "substrate/frame/root-offences",
	# "substrate/frame/root-testing",
	# "substrate/frame/safe-mode",
	# "substrate/frame/salary",
	# "substrate/frame/scheduler",
	# "substrate/frame/scored-pool",
	# "substrate/frame/session",
	# "substrate/frame/session/benchmarking",
	# "substrate/frame/society",
	# "substrate/frame/staking",
	# "substrate/frame/staking/reward-curve",
	# "substrate/frame/staking/reward-fn",
	# "substrate/frame/staking/runtime-api",
	# "substrate/frame/state-trie-migration",
	# "substrate/frame/statement",
	# "substrate/frame/sudo",
	# "substrate/frame/support",
	# "substrate/frame/support/procedural",
	# "substrate/frame/support/procedural/tools",
	# "substrate/frame/support/procedural/tools/derive",
	# "substrate/frame/support/test",
	# "substrate/frame/support/test/compile_pass",
	# "substrate/frame/support/test/pallet",
	# "substrate/frame/system",
	# "substrate/frame/system/benchmarking",
	# "substrate/frame/system/rpc/runtime-api",
	# "substrate/frame/timestamp",
	# "substrate/frame/tips",
	# "substrate/frame/transaction-payment",
	# "substrate/frame/transaction-payment/asset-conversion-tx-payment",
	# "substrate/frame/transaction-payment/asset-tx-payment",
	# "substrate/frame/transaction-payment/rpc",
	# "substrate/frame/transaction-payment/rpc/runtime-api",
	# "substrate/frame/transaction-storage",
	# "substrate/frame/treasury",
	# "substrate/frame/try-runtime",
	# "substrate/frame/tx-pause",
	# "substrate/frame/uniques",
	# "substrate/frame/utility",
	# "substrate/frame/vesting",
	# "substrate/frame/whitelist",
	# "substrate/primitives/api",
	# "substrate/primitives/api/proc-macro",
	# "substrate/primitives/api/test",
	# "substrate/primitives/application-crypto",
	# "substrate/primitives/application-crypto/test",
	# "substrate/primitives/arithmetic",
	# "substrate/primitives/arithmetic/fuzzer",
	# "substrate/primitives/authority-discovery",
	# "substrate/primitives/block-builder",
	# "substrate/primitives/blockchain",
	# "substrate/primitives/consensus/aura",
	# "substrate/primitives/consensus/babe",
	# "substrate/primitives/consensus/beefy",
	# "substrate/primitives/consensus/common",
	# "substrate/primitives/consensus/grandpa",
	# "substrate/primitives/consensus/pow",
	# "substrate/primitives/consensus/sassafras",
	# "substrate/primitives/consensus/slots",
	# "substrate/primitives/core",
	# "substrate/primitives/core/hashing",
	# "substrate/primitives/core/hashing/proc-macro",
	# "substrate/primitives/crypto/ec-utils",
	# "substrate/primitives/database",
	# "substrate/primitives/debug-derive",
	# "substrate/primitives/externalities",
	# "substrate/primitives/genesis-builder",
	# "substrate/primitives/inherents",
	# "substrate/primitives/io",
	# "substrate/primitives/keyring",
	# "substrate/primitives/keystore",
	# "substrate/primitives/maybe-compressed-blob",
	# "substrate/primitives/merkle-mountain-range",
	# "substrate/primitives/metadata-ir",
	# "substrate/primitives/npos-elections",
	# "substrate/primitives/npos-elections/fuzzer",
	# "substrate/primitives/offchain",
	# "substrate/primitives/panic-handler",
	# "substrate/primitives/rpc",
	# "substrate/primitives/runtime",
	# "substrate/primitives/runtime-interface",
	# "substrate/primitives/runtime-interface/proc-macro",
	# "substrate/primitives/runtime-interface/test",
	# "substrate/primitives/runtime-interface/test-wasm",
	# "substrate/primitives/runtime-interface/test-wasm-deprecated",
	# "substrate/primitives/session",
	# "substrate/primitives/staking",
	# "substrate/primitives/state-machine",
	# "substrate/primitives/statement-store",
	# "substrate/primitives/std",
	# "substrate/primitives/storage",
	# "substrate/primitives/test-primitives",
	# "substrate/primitives/timestamp",
	# "substrate/primitives/tracing",
	# "substrate/primitives/transaction-pool",
	# "substrate/primitives/transaction-storage-proof",
	# "substrate/primitives/trie",
	# "substrate/primitives/version",
	# "substrate/primitives/version/proc-macro",
	# "substrate/primitives/wasm-interface",
	# "substrate/primitives/weights",
	# "substrate/scripts/ci/node-template-release",
	# "substrate/test-utils",
	# "substrate/test-utils/cli",
	# "substrate/test-utils/client",
	# "substrate/test-utils/runtime",
	# "substrate/test-utils/runtime/client",
	# "substrate/test-utils/runtime/transaction-pool",
	# "substrate/utils/binary-merkle-tree",
	# "substrate/utils/build-script-utils",
	# "substrate/utils/fork-tree",
	# "substrate/utils/frame/benchmarking-cli",
	# "substrate/utils/frame/frame-utilities-cli",
	# "substrate/utils/frame/generate-bags",
	# "substrate/utils/frame/generate-bags/node-runtime",
	# "substrate/utils/frame/remote-externalities",
	# "substrate/utils/frame/rpc/client",
	# "substrate/utils/frame/rpc/state-trie-migration-rpc",
	# "substrate/utils/frame/rpc/support",
	# "substrate/utils/frame/rpc/system",
	# "substrate/utils/frame/try-runtime/cli",
	# "substrate/utils/prometheus",
	# "substrate/utils/wasm-builder",
]

default-members = ["saitachain"]

# sql = [
# 	"fc-db/sql",
# 	"fc-mapping-sync/sql",
# ]

[profile.release]
# Saitachain runtime requires unwinding.
panic = "unwind"
opt-level = 3

# make sure dev builds with backtrace do
# not slow us down
[profile.dev.package.backtrace]
inherits = "release"

[profile.production]
inherits = "release"
lto = true
codegen-units = 1

[profile.testnet]
inherits = "release"
debug = 1               # debug symbols are useful for profilers
debug-assertions = true
overflow-checks = true

# The list of dependencies below (which can be both direct and indirect dependencies) are crates
# that are suspected to be CPU-intensive, and that are unlikely to require debugging (as some of
# their debug info might be missing) or to require to be frequently recompiled. We compile these
# dependencies with `opt-level=3` even in "dev" mode in order to make "dev" mode more usable.
# The majority of these crates are cryptographic libraries.
#
# If you see an error mentioning "profile package spec ... did not match any packages", it
# probably concerns this list.
#
# This list is ordered alphabetically.
[profile.dev.package]
blake2 = { opt-level = 3 }
blake2b_simd = { opt-level = 3 }
chacha20poly1305 = { opt-level = 3 }
cranelift-codegen = { opt-level = 3 }
cranelift-wasm = { opt-level = 3 }
crc32fast = { opt-level = 3 }
crossbeam-deque = { opt-level = 3 }
crypto-mac = { opt-level = 3 }
curve25519-dalek = { opt-level = 3 }
ed25519-dalek = { opt-level = 3 }
flate2 = { opt-level = 3 }
futures-channel = { opt-level = 3 }
hash-db = { opt-level = 3 }
hashbrown = { opt-level = 3 }
hmac = { opt-level = 3 }
httparse = { opt-level = 3 }
integer-sqrt = { opt-level = 3 }
keccak = { opt-level = 3 }
libm = { opt-level = 3 }
librocksdb-sys = { opt-level = 3 }
libsecp256k1 = { opt-level = 3 }
libz-sys = { opt-level = 3 }
mio = { opt-level = 3 }
nalgebra = { opt-level = 3 }
num-bigint = { opt-level = 3 }
parking_lot = { opt-level = 3 }
parking_lot_core = { opt-level = 3 }
percent-encoding = { opt-level = 3 }
primitive-types = { opt-level = 3 }
reed-solomon-novelpoly = { opt-level = 3 }
ring = { opt-level = 3 }
rustls = { opt-level = 3 }
sha2 = { opt-level = 3 }
sha3 = { opt-level = 3 }
smallvec = { opt-level = 3 }
snow = { opt-level = 3 }
substrate-bip39 = { opt-level = 3 }
twox-hash = { opt-level = 3 }
uint = { opt-level = 3 }
wasmi = { opt-level = 3 }
x25519-dalek = { opt-level = 3 }
yamux = { opt-level = 3 }
zeroize = { opt-level = 3 }
